{"version":3,"file":"lacosanostra-ngx-cookie-consent.js","sources":["../../../../projects/lacosanostra/ngx-cookie-consent/src/lib/ngx-cookie-consent.component.ts","../../../../projects/lacosanostra/ngx-cookie-consent/src/lib/ngx-cookie-consent.module.ts","../../../../projects/lacosanostra/ngx-cookie-consent/src/public-api.ts","../../../../projects/lacosanostra/ngx-cookie-consent/src/lacosanostra-ngx-cookie-consent.ts"],"names":[],"mappings":";;;;;;;;;;;;MAgBa,yBAAyB;AAAG,IAIvC,YAAoB,QAAkB;AAAI,QAAtB,aAAQ,GAAR,QAAQ,CAAU;AAAC,QAHT,YAAO,GAAG,KAAK,CAAC;AAChD,QAAU,cAAS,GAAG,uBAAuB,CAAC;AAC9C,KAC4C;AAC5C,IACS,QAAQ;AAAK,QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;AAClC,YAAM,OAAO;AACb,SAAK;AACL,QAAI,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,MAAM,CAAC;AACrE,QAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,YAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC1B,SAAK;AACL,KAAG;AACH,IACS,KAAK;AAAK,QACf,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACjD,QAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,KAAG;AACH;qDAhCC,SAAS,SAAC,kBACT,QAAQ,EAAE,wBAAwB,kBAClC,QAAQ,EAAE;mNAOT;;4EAEF;;;;;;;;;;;0OACI;AAAC;AAAmD,YAdhD,QAAQ;AAAG;AAAG;AAGnB,sBAYD,WAAW,SAAC,eAAe;AAAM;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCF3B,sBAAsB;AAAG;kDATrC,QAAQ,SAAC,kBACR;QAAY,EAAE,CAAC,yBAAyB,CAAC,kBACzC,OAAO,EAAE,sBACP,YAAY,sBACZ,aAAa,sBACb;CAAe,kBAChB;WACD,OAAO,EAAE,CAAC;mBAAyB,CAAC;MACrC;;;;;;;;;;;;;;;0BACI;AAAC;ACfN;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACgC","sourcesContent":["import { Component, HostBinding, OnInit } from '@angular/core';\n\nimport { Platform } from '@angular/cdk/platform';\n\n@Component({\n  selector: 'lib-ngx-cookie-consent',\n  template: `\n    <div class=\"mat-typography cookie-consent-content\">\n      <ng-content></ng-content>\n    </div>\n    <button mat-icon-button aria-label=\"Close cookie consent\" (click)=\"close()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  `,\n  styleUrls: ['./ngx-cookie-consent.component.scss']\n})\nexport class NgxCookieConsentComponent implements OnInit {\n  @HostBinding('class.visible') visible = false;\n  private signature = 'cookie-consent-closed';\n\n  constructor(private platform: Platform) {}\n\n  public ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    const isClosed = localStorage.getItem(this.signature) === 'true';\n    if (!isClosed) {\n      this.visible = true;\n    }\n  }\n\n  public close(): void {\n    localStorage.setItem(this.signature, 'true');\n    this.visible = false;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgModule } from '@angular/core';\nimport { NgxCookieConsentComponent } from './ngx-cookie-consent.component';\n\n@NgModule({\n  declarations: [NgxCookieConsentComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  exports: [NgxCookieConsentComponent]\n})\nexport class NgxCookieConsentModule { }\n","/*\n * Public API Surface of ngx-cookie-consent\n */\n\nexport * from './lib/ngx-cookie-consent.component';\nexport * from './lib/ngx-cookie-consent.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}